/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class SlpToolKit_NativeLexicon */

#ifndef _Included_SlpToolKit_NativeLexicon
#define _Included_SlpToolKit_NativeLexicon
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    lookForNext
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_SlpToolKit_NativeLexicon_lookForNext
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    getSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeLexicon_getSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    exportToASCII
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_exportToASCII
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    importFromASCII
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_importFromASCII
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    loadFromFile
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_loadFromFile
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    saveFromFile
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_saveFromFile
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    normalize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_SlpToolKit_NativeLexicon_normalize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    constructor
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeLexicon_constructor
  (JNIEnv *, jclass);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    destructor
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_SlpToolKit_NativeLexicon_destructor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    getArbreLexico
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeLexicon_getArbreLexico
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    probabilityDefined
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_probabilityDefined
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    frequencyDefined
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_frequencyDefined
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    lemmeDefined
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_lemmeDefined
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    morphoDefined
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_morphoDefined
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    internalGetFromIndex
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeLexicon_internalGetFromIndex
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    internalLookFor
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeLexicon_internalLookFor__JLjava_lang_String_2
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    internalLookFor
 * Signature: (J[J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeLexicon_internalLookFor__J_3J
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    extractGraphy
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_SlpToolKit_NativeLexicon_extractGraphy
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    extractSequence
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_SlpToolKit_NativeLexicon_extractSequence
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    insert
 * Signature: (JLjava/lang/String;[JZDZJZJZJ)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeLexicon_insert
  (JNIEnv *, jclass, jlong, jstring, jlongArray, jboolean, jdouble, jboolean, jlong, jboolean, jlong, jboolean, jlong);

/*
 * Class:     SlpToolKit_NativeLexicon
 * Method:    internalContains
 * Signature: (JLjava/lang/String;[JZDZJZJZJ)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeLexicon_internalContains
  (JNIEnv *, jclass, jlong, jstring, jlongArray, jboolean, jdouble, jboolean, jlong, jboolean, jlong, jboolean, jlong);

#ifdef __cplusplus
}
#endif
#endif
