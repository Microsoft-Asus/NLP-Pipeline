/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class SlpToolKit_NativeGrammaire */

#ifndef _Included_SlpToolKit_NativeGrammaire
#define _Included_SlpToolKit_NativeGrammaire
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    ajouteNT
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_ajouteNT
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    ajouteRegle
 * Signature: (JJ[JD)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_ajouteRegle
  (JNIEnv *, jclass, jlong, jlong, jlongArray, jdouble);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    constructor
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_constructor
  (JNIEnv *, jclass);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    destructor
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_SlpToolKit_NativeGrammaire_destructor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    writeGrammaire
 * Signature: (JLjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeGrammaire_writeGrammaire
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    readGrammaire
 * Signature: (JLjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeGrammaire_readGrammaire
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    importeGrammaire
 * Signature: (JJLjava/lang/String;JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeGrammaire_importeGrammaire
  (JNIEnv *, jclass, jlong, jlong, jstring, jlong, jboolean);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    convertNT
 * Signature: (JJJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_SlpToolKit_NativeGrammaire_convertNT
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    convertNTchar
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_convertNTchar
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    exporteGrammaire
 * Signature: (JJLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_SlpToolKit_NativeGrammaire_exporteGrammaire
  (JNIEnv *, jclass, jlong, jlong, jstring);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    regleVersNumero
 * Signature: (JJ[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_SlpToolKit_NativeGrammaire_regleVersNumero
  (JNIEnv *, jclass, jlong, jlong, jlongArray);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    getLeftPart
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_getLeftPart
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    getRightPart
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_SlpToolKit_NativeGrammaire_getRightPart
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    getProba
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_SlpToolKit_NativeGrammaire_getProba
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    getSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_getSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    getNativeRulesLexicon
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_getNativeRulesLexicon
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    getNativeArbreLex
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_SlpToolKit_NativeGrammaire_getNativeArbreLex
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SlpToolKit_NativeGrammaire
 * Method:    setInitialNT
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_SlpToolKit_NativeGrammaire_setInitialNT
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
